# === REQUIRED FIELDS ===

# Specify all the conditions and samples to bo analysed.
# Depending on the resquiggler used, Nanocompore expect different
# fields to be defined for all samples:
# - Uncalled4:
#   - Each sample should have the "bam" field set with a path
#     to a bam file containing the Uncalled4 resquiggling data.
# - Eventalign or Remora:
#   - Each sample should have the "db" field set with a path
#     to an SQLite database file produced by the subcommands
#     "eventalign_collapse" or "remora_resquiggle".
data:
  # Only two conditions are supported. There's
  # no limit to the number of samples per condition.
  # You can change the labels appropriately, but
  # note that all labels should be unique.
  condition1:
    sample1:
      bam: "/path/to/uncalled4.bam"
      db: "/path/to/collapsed_eventalign.sqlite"
    sample2:
      bam: "/path/to/uncalled4.bam"
      db: "/path/to/collapsed_eventalign.sqlite"
    # you can list as many samples as you want
  condition2:
    sample3:
      bam: "/path/to/uncalled4.bam"
      db: "/path/to/collapsed_eventalign.sqlite"
    sample4:
      bam: "/path/to/uncalled4.bam"
      db: "/path/to/collapsed_eventalign.sqlite"

# Which of the two conditions is the one that's
# depleted of modifications.
depleted_condition: condition1

# Reference genome/transcriptome in fasta format
fasta: "/path/to/reference.fa"

# The kit that was used for sequencing.
# Possible values: RNA002, RNA004
kit: "RNA004"

# Specify which resquiggler you have used for your data.
# Possible options are "eventalign", "uncalled4", and "remora".
resquiggler: 'eventalign'


# === OPTIONAL FIELDS ===


# Control how many worker processes to run and which
# computing device they should run on.
# The parameter should be a map of devices and number of worker processes.
# The accepted device values are: "cpu", "cuda", "cuda:N"
# For example, to use 4 worker processes on the CPU and
# 8 worker processes on each of the two available GPUs
# one can set the following:
#devices:
#  "cpu": 4
#  "cuda:0": 8
#  "cuda:1": 8

# What to do if the output directory already exists.
# Possible options are:
# - stop (default): stop the execution with an error.
# - overwrite: delete the existing directory and start from scratch.
# - continue: try to continue from where the previous execution left off.
#result_exists_strategy: "continue"

# Path to the output directory
#outpath: "nanocompore_output"

# Text prefix for all the files generated by Nanocompore
#outprefix: "out"

# Whether to export cluster counts for each tested k-mer.
# Possible options are: hard, soft, off
# - Hard counts: For a given k-mer, each read is assigned to the more likely cluster.
# - Soft counts: For a given k-mer, each read is distributed to both clusters, depending
# on the probability of being assigned to each of them.
# - Off: Cluster counts won't be exported to the output.
# Note: this option only affects the GMM test.
#cluster_counts: hard

# Export a TSV file with the mean, median and sd for the intensity and dwell time
# for each condition and for each position. This can be used to evaluate the shift size
# for significant positions. By default it's set to False. However, even when it is
# disabled the data is still gathered and stored in the results database file.
#export_shift_stats: False

# GTF file with annotation of transcriptome used for mapping
#gtf: "/path/to/annotation.gtf"

# -- Transcript filtering options --

# Minimum coverage to consider a transcript for analysis.
#min_coverage: 30

# Transcripts with high coverage will be downsampled to this value.
#downsample_high_coverage: 5000

# Reads with higher ratio than the specified threshold
# will be discarded and not included in the statistical
# testing. E.g. with threshold of 0.1, a read of length
# 1200nt can have at most 120 invalid kmers in order to
# be included in the analysis. The definition of invalid
# depends on the resquiggler that is used.
# For Uncalled4 and Remora we consider as invalid only
# gaps in the signal alignment.
# For Eventalign, invalid kmers are gaps as well as invalid
# kmers (NNNNN) or kmers that differ from the reference kmer.
#max_invalid_kmers_freq: 0.1

# Path to a text file containing one reference name per line.
# Only transcripts found in the file will be analysed.
#selected_refs: "path/to/file.txt"

# Path to a text file containing one reference name per line.
# Transcripts found in the file will not be analysed.
#ignored_refs: "path/to/file.txt"

# Minimum length of a reference transcript to include it in the analysis.
#min_ref_length: 100

# -- Statistical testing options --

# A list of comparison methods to use.
# Currently supported methods are:
# - GAUSSIAN_MIXTURE_MODEL
# - KOLMOGOROV_SMIRNOV
# - MANN_WHITNEY
# - T_TEST
# - auto
# You can also use abbreviations:
# - GMM
# - KS
# - MW
# - TT
#comparison_methods:
#  - GAUSSIAN_MIXTURE_MODEL
#  - KOLMOGOROV_SMIRNOV

# Which method to use for multiple test correction.
# Should be one supported by statsmodels.multipletests.
# (https://www.statsmodels.org/dev/generated/statsmodels.stats.multitest.multipletests.html)
# If the auto test is used, it should be either "fdr_bh"
# or "bonferroni".
#correction_method: "fdr_bh"

# When a modification passes through the motor protein
# it can change the movement speed of the molecule,
# affecting the dwell time measured for a downstream
# position. For m6A in the RNA002 kit this offset was
# measured to be 10 nt and for RNA004 12 nt.
# The default value is set to 0,
# which means that the motor dwell time effect will be
# ignored by Nanocompore.
#motor_dwell_offset: 0

# Sequence context for combining p-values.
# The value can be in the range [0, 4]
#sequence_context: 0

# Type of weights to use for combining p-values
#sequence_context_weights: 'uniform'

# --- Verbosity options ---

# Set the log level. Possible values are:
# "warning", "info", and "debug"
#log_level: 'info'

# Display a progress bar during execution
#progress: False

